---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0,viewport-fit=cover">
    <link rel="icon" type="image/svg+xml" href="/icon.svg">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" sizes="180x180">
    <link rel="mask-icon" href="/icon.svg" color="#FFFFFF">
    <meta name="theme-color" content="#212129">
    <meta name="generator" content={Astro.generator}>
    <title>{title}</title>
    <meta name="BingBlong" content="An AI">
    {
      import.meta.env.HEAD_SCRIPTS
        ? (
        <Fragment set:html={import.meta.env.HEAD_SCRIPTS } />
          )
        : null
    }
    <!-- netlify-disable-blocks -->
    {
      import.meta.env.PROD && (
         <script is:inline src="/registerSW.js"></script>
         <link rel="manifest" href="/manifest.webmanifest" />
      )
    }
    <!-- netlify-disable-end -->
    <div class="fb items-center">
    <script>
      (function(kbsn){
      var d = document,
        s = d.createElement('script'),
        l = d.scripts[d.scripts.length - 1];
      s.settings = kbsn || {};
      s.src = "\/\/glaringregister.com\/awW\/5.whYOWBd-lvQJ2P9zkXZeTm9k6Hbn2O5BlbSlW-QC9RNjDLc\/w\/N\/DyUT3\/N\/Sd0Q0\/NBz\/AD0lNxTVc_2e";
      l.parentNode.insertBefore(s, l);
      })({})
      </script>
    <!-- Bingblong_S2S_Mediumrectangle2_ROS -->
  <style>
    @media only screen and (min-width: 0px) and (min-height: 0px) {
      div[id^="bsa-zone_1683294535864-7_123456"] {
        min-width: 300px;
        min-height: 50px;
      }
    }
    @media only screen and (min-width: 640px) and (min-height: 0px) {
      div[id^="bsa-zone_1683294535864-7_123456"] {
        min-width: 300px;
        min-height: 250px;
      }
    }
  </style>
  <div id="bsa-zone_1683294535864-7_123456"></div></div>
  <script>
    (function(__htavim){
    var d = document,
        s = d.createElement('script'),
        l = d.scripts[d.scripts.length - 1];
    s.settings = __htavim || {};
    s.src = "\/\/romivapsi.com\/d\/m.Frzzd\/GIlVtfPP3ipmvhb\/mxVuJ\/Z\/Dz0\/0jN\/zrAZ0yNqTVgK3\/LoTtQP3\/M\/DNQ\/1\/OFDegY";
    l.parentNode.insertBefore(s, l);
    })()
    </script>
    <script>
      (function(svox){
      var d = document,
          s = d.createElement('script'),
          l = d.scripts[d.scripts.length - 1];
      s.settings = svox || {};
      s.src = "\/\/glaringregister.com\/azW\/5\/w.YtWwd\/lCQ\/2J9hkYZvTD9p6\/bW2I5Hl\/SrWTQ\/9VNUDBc\/wuN\/DHUY3pNISC0\/0XN\/zYAC0RNLT\/c\/2D";
      l.parentNode.insertBefore(s, l);
      })({})
      </script>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --c-bg: #212129;
    --c-fg: #ddddf0;
    --c-scroll: #333333;
    --c-scroll-hover: #555555;
    scrollbar-color: var(--c-scrollbar) var(--c-bg);
  }

  html {
    font-family: system-ui, sans-serif;
    background-color: var(--c-bg);
    color: var(--c-fg);
  }

  html.dark {
    --c-bg: #212129;
    --c-fg: #ddddf0;
    --c-scroll: #333333;
    --c-scroll-hover: #555555;
  }

  main {
    max-width: 70ch;
    margin: 0 auto;
    padding: 6rem 2rem 4rem;
  }

  ::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  ::-webkit-scrollbar-thumb {
    background-color: var(--c-scroll);
    border-radius: 4px;
  }
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--c-scroll-hover);
  }
  ::-webkit-scrollbar-track {
    background-color: var(--c-bg);
  }

  
</style>

<script>
const initTheme = () => {
  const darkSchema
    = window.matchMedia
    && window.matchMedia('(prefers-color-scheme: dark)').matches
  const storageTheme = localStorage.getItem('theme')
  if (storageTheme) {
    document.documentElement.classList.toggle(
      'dark',
      storageTheme === 'dark',
    )
  } else {
    document.documentElement.classList.toggle('dark', darkSchema)
  }
}

initTheme()
</script>
